{
    "openapi": "3.0.0",
    "info": {
        "title": "Bookstore API",
        "description": "This is the documentation for the bookstore API.",
        "contact": {
            "email": "setty.095@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/",
            "description": "Bookstore API"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Book object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "$ref": "#/components/schemas/User/properties/email"
                                    },
                                    "password": {
                                        "$ref": "#/components/schemas/User/properties/password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "logoutUser",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "apiAuth": [
                            "write:books",
                            "read:books"
                        ]
                    }
                ]
            }
        },
        "/books": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get books",
                "description": "Returns list of books",
                "operationId": "getBooks",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Add a new book to the store",
                "description": "",
                "operationId": "addBook",
                "requestBody": {
                    "description": "Book object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiAuth": [
                            "write:books",
                            "read:books"
                        ]
                    }
                ]
            }
        },
        "/books/{bookId}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Find book by ID",
                "description": "Returns a single book",
                "operationId": "getBookById",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "description": "ID of book to return",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "c85c9c7c-dbb8-4d62-b1a9-f5585ee208d6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Book"
                ],
                "summary": "Update an existing book.",
                "description": "",
                "operationId": "updateBook",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "description": "ID of book to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "c85c9c7c-dbb8-4d62-b1a9-f5585ee208d6"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Book object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiAuth": [
                            "write:books",
                            "read:books"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Book"
                ],
                "summary": "Deletes a book",
                "description": "",
                "operationId": "deleteBook",
                "parameters": [
                    {
                        "name": "bookId",
                        "in": "path",
                        "description": "Book id to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "c85c9c7c-dbb8-4d62-b1a9-f5585ee208d6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "apiAuth": [
                            "write:books",
                            "read:books"
                        ]
                    }
                ]
            }
        },
        "/search-books": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Search for books.",
                "description": "Returns list of related books",
                "operationId": "searchBooks",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "required": [
                    "title",
                    "author",
                    "genre",
                    "isbn",
                    "description",
                    "published",
                    "publisher"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "c85c9c7c-dbb8-4d62-b1a9-f5585ee208d6"
                    },
                    "title": {
                        "type": "string",
                        "example": "Atomic Habits"
                    },
                    "author": {
                        "type": "string",
                        "example": "James Clear"
                    },
                    "genre": {
                        "type": "string",
                        "example": "Motivational"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "description": {
                        "type": "string",
                        "example": "An easy and proven way to build good habits and break bad ones"
                    },
                    "publisher": {
                        "type": "string",
                        "example": "Penguin"
                    },
                    "published": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-10-23"
                    },
                    "image": {
                        "type": "string",
                        "example": "imageUrl"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Book"
                }
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "c85c9c7c-dbb8-4d62-b1a9-f5585ee208d6"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token bearer Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}